<!DOCTYPE html>
<html lang="{{@site.locale}}">
<head>

    {{!-- Basic meta - advanced meta is output with {{ghost_head}} below --}}
    <title>{{meta_title}}</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    {{!-- Preload main styles and scripts for better performance --}}
    <link rel="preload" as="style" href="/public/cards.min.css">
    <link rel="preload" as="style" href="{{asset "build/screen.css" hasMinFile="true"}}">
    <link rel="preload" as="script" href="{{asset "highlightjs/highlight.js" hasMinFile="true"}}">
    <link rel="preload" as="script" href="{{asset "build/theme.js" hasMinFile="true"}}">

    {{!-- Fonts --}}
    <link rel="preload" as="style" href="{{asset "fonts/font-awesome.min.css" absolute="false"}}">
    <link rel="preload" as="style" href="{{asset "fonts/merriweather/300.css" absolute="false"}}">
    <link rel="preload" as="style" href="{{asset "fonts/merriweather/300-italic.css" absolute="false"}}">
    <link rel="preload" as="style" href="{{asset "fonts/merriweather/700.css" absolute="false"}}">
    <link rel="preload" as="style" href="{{asset "fonts/merriweather/700-italic.css" absolute="false"}}">
    <link rel="preload" as="style" href="{{asset "fonts/source-sans-pro/900.css" absolute="false"}}">

    <link rel="stylesheet" type="text/css" href="{{asset "fonts/font-awesome.min.css" absolute="false"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "fonts/merriweather/300.css" absolute="false"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "fonts/merriweather/300-italic.css" absolute="false"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "fonts/merriweather/700.css" absolute="false"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "fonts/merriweather/700-italic.css" absolute="false"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "fonts/source-sans-pro/900.css" absolute="false"}}">

    {{!-- Theme assets - use the {{asset}} helper to reference styles & scripts, this will take care of caching and cache-busting automatically --}}
    <link rel="stylesheet" type="text/css" href="{{asset "build/screen.css" hasMinFile="true"}}">

    {{!-- highlight.js
          TODO(jochumdev): use the asset helper.
    --}}
    {{#if @custom.highlightjs_theme }}
    <link rel="preload" as="style" href="/assets/highlightjs/styles/{{ @custom.highlightjs_theme }}">
    <link rel="stylesheet" type="text/css" href="/assets/highlightjs/styles/{{ @custom.highlightjs_theme }}">
    {{/if}}

    <script>
        /* The script for calculating the color contrast has been taken from
        https://gomakethings.com/dynamically-changing-the-text-color-based-on-background-color-contrast-with-vanilla-js/ */
        var accentColor = getComputedStyle(document.documentElement).getPropertyValue('--background-color');
        accentColor = accentColor.trim().slice(1);
        var r = parseInt(accentColor.substr(0, 2), 16);
        var g = parseInt(accentColor.substr(2, 2), 16);
        var b = parseInt(accentColor.substr(4, 2), 16);
        var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
        var textColor = (yiq >= 128) ? 'dark' : 'light';

        document.documentElement.className = `has-${textColor}-text`;
    </script>

    {{!-- This tag outputs all your advanced SEO meta, structured data, and other important settings, it should always be the last tag before the closing head tag --}}
    {{ghost_head}}
</head>
{{!-- TODO(jochumdev): Make font switching working
<body class="is-preload {{body_class}} has-{{#match @custom.title_font "Elegant serif"}}serif{{else match @custom.title_font "Consistent mono"}}mono{{else}}sans{{/match}}-title has-{{#match @custom.body_font "Elegant serif"}}serif{{else}}sans{{/match}}-body">
--}}
<body class="is-preload {{body_class}}">

<script type="text/javascript" src="{{asset "highlightjs/highlight.js" hasMinFile="true"}}"></script>
<script type="text/javascript" src="{{asset "build/theme.js" hasMinFile="true"}}"></script>

{{!-- 
    Writes the settings from the them into the javascript memory, then initalizes the theme. 
    TODO(jochumdev): Find a way to collect the settings from the API.
--}}
<script type="text/javascript">
(async function () {
    const settings = theme.settings;
    const SKEYS = settings.KEYS;

    settings.Set(SKEYS.I18N, {{#match custom.i18n "==" ""}}false{{else}}true{{/match}});
    settings.Set(SKEYS.I18N_LANGUAGES, '{{@custom.i18n}}'.split(','));
    settings.Set(SKEYS.I18N_NAMESPACES, '{{@custom.i18n_namespaces}}'.split(','));
    settings.Set(SKEYS.I18N_DEFAULT_LANGUAGE, '{{@site.locale}}');
    settings.Done();

    await theme.init();
})();
</script>

<img class="jarallax-img" src="{{img_url @site.cover_image}}" alt="">

<div id="gh-viewport" class="gh-viewport">
    
    {{!-- Intro --}}
    {{#is "home"}}
    <div id="intro">
        <h1>{{@site.title}}</h1>
        <p>{{@site.description}}</p>
        <ul class="actions">
           <li><a href="#start" class="clear button icon solo fa-arrow-down">Continue</a></li>
        </ul>
    </div>
    {{/is}}

    <div id="start"></div>
    {{"navigation" navigationLayout=@custom.navigation_layout}}

    {{{body}}}
    
    {{> "components/footer"}}   
</div>

{{#is "post, page"}}
    {{> "lightbox"}}
{{/is}}

{{!-- Ghost outputs required functional scripts with this tag, it should always be the last thing before the closing body tag --}}
{{ghost_foot}}

</body>
</html>
